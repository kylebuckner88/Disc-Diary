[{"/Users/kylebuckner/workspace/nutshell-java-dalia/src/index.js":"1","/Users/kylebuckner/workspace/nutshell-java-dalia/src/reportWebVitals.js":"2","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Nutshell.js":"3","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/ApplicationViews.js":"4","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/auth/Register.js":"5","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/auth/Login.js":"6","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/nav/NavBar.js":"7","/Users/kylebuckner/workspace/nutshell-java-dalia/src/modules/FriendManager.js":"8","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Tasks/TaskList.js":"9","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Tasks/TaskForm.js":"10","/Users/kylebuckner/workspace/nutshell-java-dalia/src/modules/EventManager.js":"11","/Users/kylebuckner/workspace/nutshell-java-dalia/src/modules/ArticleManager.js":"12","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Tasks/TaskCard.js":"13","/Users/kylebuckner/workspace/nutshell-java-dalia/src/modules/TaskManager.js":"14","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Friend/FriendList.js":"15","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Friend/FriendCard.js":"16","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Friend/FriendForm.js":"17","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Home.js":"18","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Events/EventForm.js":"19","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Events/EventEditForm.js":"20","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Events/EventList.js":"21","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Tasks/TaskDetail.js":"22","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/article/ArticleList.js":"23","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/PropsAndState.js":"24","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Events/EventCard.js":"25","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/article/ArticleCard.js":"26","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/article/ArticleForm.js":"27","/Users/kylebuckner/workspace/nutshell-java-dalia/src/modules/MessageManager.js":"28","/Users/kylebuckner/workspace/Disc-Diary/src/index.js":"29","/Users/kylebuckner/workspace/Disc-Diary/src/reportWebVitals.js":"30","/Users/kylebuckner/workspace/Disc-Diary/src/components/DiscDiary.js":"31","/Users/kylebuckner/workspace/Disc-Diary/src/components/ApplicationViews.js":"32","/Users/kylebuckner/workspace/Disc-Diary/src/components/nav/NavBar.js":"33","/Users/kylebuckner/workspace/Disc-Diary/src/components/Home.js":"34","/Users/kylebuckner/workspace/Disc-Diary/src/components/auth/Login.js":"35"},{"size":619,"mtime":1645293108115,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1645293108115,"results":"38","hashOfConfig":"37"},{"size":1019,"mtime":1645669883742,"results":"39","hashOfConfig":"37"},{"size":2798,"mtime":1646185577859,"results":"40","hashOfConfig":"37"},{"size":3739,"mtime":1645489047904,"results":"41","hashOfConfig":"37"},{"size":2581,"mtime":1645488997748,"results":"42","hashOfConfig":"37"},{"size":1068,"mtime":1646185577861,"results":"43","hashOfConfig":"37"},{"size":870,"mtime":1646184933809,"results":"44","hashOfConfig":"37"},{"size":1337,"mtime":1646084327892,"results":"45","hashOfConfig":"37"},{"size":3894,"mtime":1646084327892,"results":"46","hashOfConfig":"37"},{"size":1032,"mtime":1646185577862,"results":"47","hashOfConfig":"37"},{"size":513,"mtime":1646185577861,"results":"48","hashOfConfig":"37"},{"size":501,"mtime":1646084327891,"results":"49","hashOfConfig":"37"},{"size":689,"mtime":1646084327894,"results":"50","hashOfConfig":"37"},{"size":1555,"mtime":1646184933808,"results":"51","hashOfConfig":"37"},{"size":440,"mtime":1646184933807,"results":"52","hashOfConfig":"37"},{"size":1673,"mtime":1646184933808,"results":"53","hashOfConfig":"37"},{"size":364,"mtime":1646084327891,"results":"54","hashOfConfig":"37"},{"size":4057,"mtime":1646185577859,"results":"55","hashOfConfig":"37"},{"size":4372,"mtime":1646084327889,"results":"56","hashOfConfig":"37"},{"size":1613,"mtime":1646084327890,"results":"57","hashOfConfig":"37"},{"size":1418,"mtime":1646084327892,"results":"58","hashOfConfig":"37"},{"size":1107,"mtime":1646185577861,"results":"59","hashOfConfig":"37"},{"size":498,"mtime":1646084327891,"results":"60","hashOfConfig":"37"},{"size":945,"mtime":1646185577859,"results":"61","hashOfConfig":"37"},{"size":582,"mtime":1646185577860,"results":"62","hashOfConfig":"37"},{"size":0,"mtime":1646185577860,"results":"63","hashOfConfig":"37"},{"size":0,"mtime":1646185577862,"results":"64","hashOfConfig":"37"},{"size":411,"mtime":1646705145982,"results":"65","hashOfConfig":"66"},{"size":362,"mtime":1645293108115,"results":"67","hashOfConfig":"66"},{"size":1025,"mtime":1646708733418,"results":"68","hashOfConfig":"66"},{"size":787,"mtime":1646708150288,"results":"69","hashOfConfig":"66"},{"size":1244,"mtime":1646708882868,"results":"70","hashOfConfig":"66"},{"size":225,"mtime":1646708160804,"results":"71","hashOfConfig":"66"},{"size":2443,"mtime":1646707859512,"results":"72","hashOfConfig":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"14zf1rk",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"75"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"75"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wdh25s",{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kylebuckner/workspace/nutshell-java-dalia/src/index.js",[],["147","148"],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/reportWebVitals.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Nutshell.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/ApplicationViews.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/auth/Register.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/auth/Login.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/nav/NavBar.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/modules/FriendManager.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Tasks/TaskList.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Tasks/TaskForm.js",["149","150","151"],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Taskform.css'\nimport { addTask } from '../../modules/TaskManager';\n\n// import { getAllLocations } from '../../modules/LocationManager';\n// import { getAllCustomers } from '../../modules/CustomerManager';\n\nexport const TaskForm = () => {\n\t// State will contain both task data as well as an isLoading flag.\n\t// Define the initial state of the form inputs with useState()\n\n\tconst [task, setTask] = useState({\n\t\tgoal: \"\",\n\t\tlocation: \"\",\n\t\tdescription: \"\",\n\t\ttimeframe: \"\"\n\t});\n\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\t// imported from old code, may not need\n\t// const [locations, setLocations] = useState([]);\n\t// const [customers, setCustomers] = useState([]);\n\n\tconst navigate = useNavigate();\n\n\t//when a field changes, update state. The return will re-render and display based on the values in state\n\t// NOTE! What's happening in this function can be very difficult to grasp. Read it over many times and ask a lot questions about it.\n\t//Controlled component\n\n\tconst handleControlledInputChange = (event) => {\n\t\t/* When changing a state object or array,\n\t\talways create a copy, make changes, and then set state.*/\n\t\tconst newTask = { ...task }\n\t\tlet selectedVal = event.target.value\n\t\t// forms always provide values as strings. But we want to save the ids as numbers.\n\t\tif (event.target.id.includes(\"Id\")) {\n\t\t\tselectedVal = parseInt(selectedVal)\n\t\t}\n\t\t/* task is an object with properties.\n\t\tSet the property to the new value\n\t\tusing object bracket notation. */\n\t\tnewTask[event.target.id] = selectedVal\n\t\t// update state\n\t\tsetTask(newTask)\n\t}\n\n\t//Unsure if this code is needed\n    // useEffect(() => {\n\t// \t//load location data and setState\n    //     getAllLocations().then(setLocations)\n\t// }, []);\n\n    //  useEffect(() => {\n\t// \t//load customer data and setState\n    //     getAllCustomers().then(setCustomers)\n\t// }, []);\n\n\n\tconst handleClickSaveTask = (event) => {\n\t\tevent.preventDefault() //Prevents the browser from submitting the form\n\t\t//if else statment may be unnessessary \n\t\t// const locationId = task.locationId\n\t\t// const customerId = task.customerId\n\n\t\t// if (locationId === 0 || customerId === 0) {\n\t\t// \twindow.alert(\"Please select a location and a customer\")\n\t\t// } else \n\t\t{\n\t\t\t//invoke addtask passing task as an argument.\n\t\t\t//once complete, change the url and display the task list\n\t\t\taddTask(task)\n\t\t\t\t.then(() => navigate(\"/tasks\"))\n\t\t}\n\t}\n\n\treturn (\n\t\t<form className=\"taskForm\">\n\t\t\t<h2 className=\"taskForm__title\">New Task</h2>\n\t\t\t<fieldset>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"goal\">Task Goal:</label>\n\t\t\t\t\t<input type=\"text\" id=\"goal\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"task goal\" value={task.goal} />\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t\t<fieldset>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"location\">Task Location:</label>\n\t\t\t\t\t<input type=\"text\" id=\"location\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"task location\" value={task.location} />\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t\t<fieldset>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"location\">Task Description: </label>\n\t\t\t\t\t<input type=\"text\" id=\"description\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"task description\" value={task.description}/>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t\t<fieldset>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"customerId\">Task Timeframe: </label>\n\t\t\t\t\t<input type=\"text\" id=\"timeframe\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"task timeframe\" value={task.timeframe}/>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t\t<button className=\"btn btn-primary\"\n\t\t\t\tonClick={handleClickSaveTask}>\n\t\t\t\tSave task\n          </button>\n\t\t</form>\n\t)\n};\n","/Users/kylebuckner/workspace/nutshell-java-dalia/src/modules/EventManager.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/modules/ArticleManager.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Tasks/TaskCard.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/modules/TaskManager.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Friend/FriendList.js",["152","153"],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Friend/FriendCard.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Friend/FriendForm.js",["154","155","156"],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Home.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Events/EventForm.js",["157","158","159","160"],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Events/EventEditForm.js",["161"],"import React, { useState, useEffect } from \"react\"\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {getEventById, updateEvent} from \"../../modules/EventManager\"\nimport \"./EventForm.css\"\n\nexport const EventEditForm = () => {\n    const [event, setEvent] = useState({ title: \"\", subject: \"\", location: \"\", description: \"\", date: \"\", time: \"\" });\n    const [isLoading, setIsLoading ] = useState(false);\n\n    const {eventId} = useParams();\n    const navigate = useNavigate();\n\n    const handleFieldChange = evt => {\n        const stateToChange = { ...event };\n        stateToChange[evt.target.id] = evt.target.value;\n        setEvent(stateToChange);\n    };\n\n    const updateExistingEvent = evt => {\n        evt.preventDefault()\n        setIsLoading(true);\n\n        // This is an edit, we need the id\n        const editedEvent = {\n            id: eventId,\n            title: event.title,\n            subject: event.subject,\n            location: event.location,\n            description: event.description,\n            date: event.date,\n            time: event.time\n\n        };\n\n        updateEvent(editedEvent)\n            .then(() => navigate(\"/events\")\n        )\n\n    }\n\n    useEffect(() => {\n        getEventById(eventId)\n          .then(event => {\n            setEvent(event);\n            setIsLoading(false);\n          });\n    }, []);\n\n\n    return (\n        <>\n            <form>\n                <fieldset>\n                    <div className=\"formgrid\">\n                        <input\n                            type=\"text\"\n                            required\n                            className=\"form-control\"\n                            onChange={handleFieldChange}\n                            id=\"title\"\n                            value={event.title}\n                            />\n                            <label htmlFor=\"name\">Title</label>\n                            \n\n                        <input\n                            type=\"text\"\n                            required\n                            className=\"form-control\"\n                            onChange={handleFieldChange}\n                            id=\"subject\"\n                            value={event.subject}\n                            />\n                            <label htmlFor=\"name\">Subject</label>\n\n                        <input\n                            type=\"text\"\n                            required\n                            className=\"form-control\"\n                            onChange={handleFieldChange}\n                            id=\"location\"\n                            value={event.location}\n                            />\n                            <label htmlFor=\"name\">Location</label>\n\n                        <input\n                            type=\"text\"\n                            required\n                            className=\"form-control\"\n                            onChange={handleFieldChange}\n                            id=\"date\"\n                            value={event.date}\n                            />\n                            <label htmlFor=\"name\">Date</label>\n\n                        <input\n                            type=\"text\"\n                            required\n                            className=\"form-control\"\n                            onChange={handleFieldChange}\n                            id=\"time\"\n                            value={event.time}\n                            />\n                            <label htmlFor=\"name\">Time</label>\n\n                        <input\n                            type=\"text\"\n                            required\n                            className=\"form-control\"\n                            onChange={handleFieldChange}\n                            id=\"description\"\n                            value={event.description}\n                            />\n                            <label htmlFor=\"name\">Decription</label>\n                       \n                        </div>\n                    <div className=\"alignRight\">\n                        <button\n                        type=\"button\" disabled={isLoading}\n                        onClick={updateExistingEvent}\n                        className=\"btn btn-primary\"\n                        >Submit</button>\n\n                        </div>\n                </fieldset>\n            </form>\n        </>\n    );\n\n}","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Events/EventList.js",["162"],"import React, { useState, useEffect } from 'react';\nimport { EventCard } from './EventCard.js';\nimport { getAllEvents, getEventById, deleteEvent } from '../../modules/EventManager.js';\nimport { useNavigate } from 'react-router-dom'\n\nexport const EventList = () => {\n    //The initial state is an empty array\n    const [events, setEvents] = useState([]);\n    let navigate = useNavigate();\n\n    const getEventById = () => {\n        //After the date comes back from the API,\n        // we use the setEvents funstion to update state\n        return getAllEvents().then(eventsFromAPI => {\n            setEvents(eventsFromAPI)\n        });\n    }\n\n    //got the customers from the API on the components's first render\n    useEffect(() => {\n        getEventById();\n    }, []);\n\n    //this is the delete customer function\n    const handleDeleteEvent = id => {\n        deleteEvent(id)\n        .then(() => getAllEvents().then(setEvents));\n    };\n\n    //Now we use .map() to \"loop over\" the events array to show a list of event cards\n    return (\n        <>\n            <section className=\"section-content\">\n                <button type=\"button\"\n                    className=\"btn\"\n                    onClick={() => {navigate(\"/events/create\")}}>\n                    Add New Evevnt\n                    </button>\n            </section>\n            <div className=\"container-cards\">\n                {events.map(event =>\n                    <EventCard \n                    key={event.id}\n                    eventObject={event}\n                    handleDeleteEvent={handleDeleteEvent} />)}\n            </div>\n        </>\n    )\n}","/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Tasks/TaskDetail.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/article/ArticleList.js",["163"],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/PropsAndState.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Events/EventCard.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/article/ArticleCard.js",[],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/article/ArticleForm.js",["164","165","166","167"],"/Users/kylebuckner/workspace/nutshell-java-dalia/src/modules/MessageManager.js",["168"],"/Users/kylebuckner/workspace/Disc-Diary/src/index.js",[],"/Users/kylebuckner/workspace/Disc-Diary/src/reportWebVitals.js",[],"/Users/kylebuckner/workspace/Disc-Diary/src/components/DiscDiary.js",[],"/Users/kylebuckner/workspace/Disc-Diary/src/components/ApplicationViews.js",[],"/Users/kylebuckner/workspace/Disc-Diary/src/components/nav/NavBar.js",[],"/Users/kylebuckner/workspace/Disc-Diary/src/components/Home.js",[],"/Users/kylebuckner/workspace/Disc-Diary/src/components/auth/Login.js",["169"],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":20,"column":9,"nodeType":"176","messageId":"177","endLine":20,"endColumn":18},{"ruleId":"174","severity":1,"message":"178","line":20,"column":20,"nodeType":"176","messageId":"177","endLine":20,"endColumn":32},{"ruleId":"179","severity":1,"message":"180","line":70,"column":3,"nodeType":"181","messageId":"182","endLine":75,"endColumn":4},{"ruleId":"174","severity":1,"message":"183","line":6,"column":10,"nodeType":"176","messageId":"177","endLine":6,"endColumn":20},{"ruleId":"174","severity":1,"message":"184","line":30,"column":11,"nodeType":"176","messageId":"177","endLine":30,"endColumn":32},{"ruleId":"174","severity":1,"message":"175","line":17,"column":9,"nodeType":"176","messageId":"177","endLine":17,"endColumn":18},{"ruleId":"174","severity":1,"message":"178","line":17,"column":20,"nodeType":"176","messageId":"177","endLine":17,"endColumn":32},{"ruleId":"185","severity":1,"message":"186","line":45,"column":2,"nodeType":"176","endLine":45,"endColumn":11,"suggestions":"187"},{"ruleId":"174","severity":1,"message":"188","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"175","line":27,"column":12,"nodeType":"176","messageId":"177","endLine":27,"endColumn":21},{"ruleId":"174","severity":1,"message":"178","line":27,"column":23,"nodeType":"176","messageId":"177","endLine":27,"endColumn":35},{"ruleId":"189","severity":1,"message":"190","line":69,"column":4,"nodeType":"191","endLine":69,"endColumn":8},{"ruleId":"185","severity":1,"message":"192","line":47,"column":8,"nodeType":"193","endLine":47,"endColumn":10,"suggestions":"194"},{"ruleId":"174","severity":1,"message":"195","line":3,"column":24,"nodeType":"176","messageId":"177","endLine":3,"endColumn":36},{"ruleId":"174","severity":1,"message":"196","line":3,"column":26,"nodeType":"176","messageId":"177","endLine":3,"endColumn":40},{"ruleId":"174","severity":1,"message":"188","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"197","line":3,"column":22,"nodeType":"176","messageId":"177","endLine":3,"endColumn":36},{"ruleId":"174","severity":1,"message":"175","line":18,"column":9,"nodeType":"176","messageId":"177","endLine":18,"endColumn":18},{"ruleId":"174","severity":1,"message":"178","line":18,"column":20,"nodeType":"176","messageId":"177","endLine":18,"endColumn":32},{"ruleId":"174","severity":1,"message":"198","line":3,"column":7,"nodeType":"176","messageId":"177","endLine":3,"endColumn":21},{"ruleId":"174","severity":1,"message":"199","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":14},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'setIsLoading' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'FriendForm' is defined but never used.","'handleClickSaveFriend' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setUsers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["202"],"'useEffect' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'eventId'. Either include it or remove the dependency array.","ArrayExpression",["203"],"'getEventById' is defined but never used.","'getArticleById' is defined but never used.","'getAllArticles' is defined but never used.","'getMessageById' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},"Add dependencies array: []",{"range":"208","text":"209"},"Update the dependencies array to be: [eventId]",{"range":"210","text":"211"},[935,935],", []",[1345,1347],"[eventId]"]