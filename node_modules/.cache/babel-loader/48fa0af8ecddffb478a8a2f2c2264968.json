{"ast":null,"code":"var _jsxFileName = \"/Users/kylebuckner/workspace/Disc-Diary/src/components/ApplicationViews.js\";\nimport React from \"react\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport { Home } from \"./Home.js\";\nimport { Login } from './auth/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ApplicationViews = ({\n  isAuthenticated,\n  setIsAuthenticated\n}) => {\n  const PrivateRoute = ({\n    children\n  }) => {\n    return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 43\n    }, this);\n  };\n\n  const setAuthUser = user => {\n    sessionStorage.setItem(\"discdiary_user\", JSON.stringify(user));\n    setIsAuthenticated(sessionStorage.getItem(\"discdiary_user\") !== null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setAuthUser: setAuthUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = ApplicationViews;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplicationViews\");","map":{"version":3,"sources":["/Users/kylebuckner/workspace/Disc-Diary/src/components/ApplicationViews.js"],"names":["React","Route","Routes","Navigate","Home","Login","ApplicationViews","isAuthenticated","setIsAuthenticated","PrivateRoute","children","setAuthUser","user","sessionStorage","setItem","JSON","stringify","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,KAAT,QAAsB,cAAtB;;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAD,KAA6C;AACzE,QAAMC,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkB;AACrC,WAAOH,eAAe,GAAGG,QAAH,gBAAc,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAApC;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAIC,IAAD,IAAU;AAC1BC,IAAAA,cAAc,CAACC,OAAf,CAAuB,gBAAvB,EAAyCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAzC;AACAJ,IAAAA,kBAAkB,CAACK,cAAc,CAACI,OAAf,CAAuB,gBAAvB,MAA6C,IAA9C,CAAlB;AACD,GAHH;;AAMJ,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,OAAO,eAAE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAEN;AAApB;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,OAAO,eAAE,QAAC,YAAD;AAAA,iCAAc,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AASC,CApBM;KAAML,gB","sourcesContent":["import React from \"react\"\nimport { Route, Routes, Navigate } from \"react-router-dom\"\nimport { Home } from \"./Home.js\"\nimport { Login } from './auth/Login'\n\nexport const ApplicationViews = ({ isAuthenticated, setIsAuthenticated }) => {\n    const PrivateRoute = ({ children }) => {\n      return isAuthenticated ? children : <Navigate to=\"/login\" />;\n    }\n\n    const setAuthUser = (user) => {\n        sessionStorage.setItem(\"discdiary_user\", JSON.stringify(user))\n        setIsAuthenticated(sessionStorage.getItem(\"discdiary_user\") !== null)\n      }\n\n\nreturn (\n    <>\n        <Routes>\n            <Route exact path=\"/login\" element={<Login setAuthUser={setAuthUser} />} />\n\n            <Route exact path=\"/\" element={<PrivateRoute><Home /></PrivateRoute>} />\n        </Routes>\n    </>\n)\n}\n"]},"metadata":{},"sourceType":"module"}