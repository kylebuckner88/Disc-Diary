{"ast":null,"code":"var _jsxFileName = \"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Friend/FriendList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getAllFriends } from '../../modules/FriendManager';\nimport { deleteFriend } from '../../modules/FriendManager';\nimport { useNavigate } from 'react-router-dom';\nimport { FriendCard } from './FriendCard';\nimport { FriendForm } from './FriendForm';\nimport { addFriend } from '../../modules/FriendManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendList = () => {\n  _s();\n\n  const [friends, setFriends] = useState([]);\n  const navigate = useNavigate();\n\n  const getFriends = () => {\n    return getAllFriends().then(friendsFromAPI => {\n      // We'll do something more interesting with this data soon.\n      setFriends(friendsFromAPI);\n    });\n  };\n\n  useEffect(() => {\n    getFriends();\n  }, []);\n\n  const handleDeleteFriend = id => {\n    deleteFriend(id).then(() => getAllFriends().then(setFriends));\n  };\n\n  const handleClickSaveFriend = id => {\n    addFriend(id).then(() => getAllFriends().then(setFriends));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-cards\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section-content\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: () => {\n          navigate(\"/addFriend\");\n        },\n        children: \"Add Friend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), friends.map(friend => /*#__PURE__*/_jsxDEV(FriendCard, {\n      animal: friend,\n      handleDeleteFriend: handleDeleteFriend\n    }, friend.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FriendList, \"/5/3yuB1YFp/eXWufxZvfa3hg3Q=\", false, function () {\n  return [useNavigate];\n});\n\n_c = FriendList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Friend/FriendList.js"],"names":["React","useState","useEffect","getAllFriends","deleteFriend","useNavigate","FriendCard","FriendForm","addFriend","FriendList","friends","setFriends","navigate","getFriends","then","friendsFromAPI","handleDeleteFriend","id","handleClickSaveFriend","map","friend"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,6BAA1B;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAE5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMW,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,UAAU,GAAG,MAAM;AACrB,WAAOV,aAAa,GAAGW,IAAhB,CAAqBC,cAAc,IAAI;AAC5C;AACAJ,MAAAA,UAAU,CAACI,cAAD,CAAV;AACD,KAHM,CAAP;AAID,GALH;;AAOEb,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMG,kBAAkB,GAAGC,EAAE,IAAI;AAC/Bb,IAAAA,YAAY,CAACa,EAAD,CAAZ,CACCH,IADD,CACM,MAAMX,aAAa,GAAGW,IAAhB,CAAqBH,UAArB,CADZ;AAEH,GAHC;;AAKF,QAAMO,qBAAqB,GAAGD,EAAE,IAAI;AAClCT,IAAAA,SAAS,CAACS,EAAD,CAAT,CACCH,IADD,CACM,MAAMX,aAAa,GAAGW,IAAhB,CAAqBH,UAArB,CADZ;AAED,GAHD;;AAKE,sBAGE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA,6BACM;AAAQ,QAAA,IAAI,EAAC,QAAb;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AAACC,UAAAA,QAAQ,CAAC,YAAD,CAAR;AAAuB,SAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YADF,EAQGF,OAAO,CAACS,GAAR,CAAYC,MAAM,iBACjB,QAAC,UAAD;AAEE,MAAA,MAAM,EAAEA,MAFV;AAGE,MAAA,kBAAkB,EAAEJ;AAHtB,OACOI,MAAM,CAACH,EADd;AAAA;AAAA;AAAA;AAAA,YADD,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAmBD,CA7CE;;GAAMR,U;UAGQJ,W;;;KAHRI,U","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAllFriends } from '../../modules/FriendManager';\nimport { deleteFriend } from '../../modules/FriendManager';\nimport { useNavigate } from 'react-router-dom';\nimport { FriendCard } from './FriendCard';\nimport { FriendForm } from './FriendForm';\nimport { addFriend } from '../../modules/FriendManager';\n\nexport const FriendList = () => {\n\n    const [friends, setFriends] = useState([]);\n    const navigate = useNavigate();\n\n    const getFriends = () => {\n        return getAllFriends().then(friendsFromAPI => {\n          // We'll do something more interesting with this data soon.\n          setFriends(friendsFromAPI)\n        });\n      };\n    \n      useEffect(() => {\n        getFriends();\n      }, []);\n\n      const handleDeleteFriend = id => {\n        deleteFriend(id)\n        .then(() => getAllFriends().then(setFriends));\n    };\n\n    const handleClickSaveFriend = id => {\n      addFriend(id)\n      .then(() => getAllFriends().then(setFriends));\n    };\n    \n      return (\n    \n\n        <div className=\"container-cards\">\n          <section className=\"section-content\">\n                <button type=\"button\"\n                  className=\"btn\"\n                  onClick={() => {navigate(\"/addFriend\")}}>\n                  Add Friend\n                </button>\n          </section>\n          {friends.map(friend => \n            <FriendCard \n              key={friend.id} \n              animal={friend} \n              handleDeleteFriend={handleDeleteFriend} />)}\n\n        </div>\n      );\n    };\n\n\n"]},"metadata":{},"sourceType":"module"}