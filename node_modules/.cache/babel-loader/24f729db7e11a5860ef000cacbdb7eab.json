{"ast":null,"code":"var _jsxFileName = \"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Friend/FriendForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // import { getAllFriends } from '../../modules/FriendManager';\n// import './FriendForm.css'\n\nimport { addFriend } from '../../modules/FriendManager';\nimport { getAllUsers } from '../../modules/FriendManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendForm = () => {\n  _s();\n\n  const [user, setUser] = useState({\n    email: \"\",\n    name: \"\",\n    id: 0\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const navigate = useNavigate();\n\n  const handleControlledInputChange = event => {\n    const newFriend = { ...friend\n    };\n    let selectedVal = event.target.value;\n\n    if (event.target.id.includes(\"Id\")) {\n      selectedVal = parseInt(selectedVal);\n    }\n\n    newFriend[event.target.id] = selectedVal;\n    setUser(newFriend);\n  };\n\n  useEffect(() => {\n    getAllUsers().then(setUsers);\n  }, []);\n\n  const handleClickSaveUser = event => {\n    addFriend(friend).then(() => navigate(\"/friends\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"friendForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"friendForm__title\",\n      children: \"Add Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: user.id,\n          name: \"name\",\n          id: \"id\",\n          onChange: handleControlledInputChange,\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"select a user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 7\n          }, this), users.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: c.id,\n            children: c.name\n          }, c.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 8\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleClickSaveUser,\n      children: \"Add Friend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FriendForm, \"mLC4wd6OByTPOvTlW0W+8k+fZp0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = FriendForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendForm\");","map":{"version":3,"sources":["/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Friend/FriendForm.js"],"names":["React","useState","useEffect","useNavigate","addFriend","getAllUsers","FriendForm","user","setUser","email","name","id","isLoading","setIsLoading","users","setUsers","navigate","handleControlledInputChange","event","newFriend","friend","selectedVal","target","value","includes","parseInt","then","handleClickSaveUser","map","c"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;AACA;;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,WAAT,QAA4B,6BAA5B;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAG/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAChCQ,IAAAA,KAAK,EAAE,EADyB;AAEhCC,IAAAA,IAAI,EAAE,EAF0B;AAGhCC,IAAAA,EAAE,EAAE;AAH4B,GAAD,CAAhC;AAMA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AAGA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMe,QAAQ,GAAGb,WAAW,EAA5B;;AAGA,QAAMc,2BAA2B,GAAIC,KAAD,IAAW;AAE9C,UAAMC,SAAS,GAAG,EAAE,GAAGC;AAAL,KAAlB;AACA,QAAIC,WAAW,GAAGH,KAAK,CAACI,MAAN,CAAaC,KAA/B;;AAEA,QAAIL,KAAK,CAACI,MAAN,CAAaX,EAAb,CAAgBa,QAAhB,CAAyB,IAAzB,CAAJ,EAAoC;AACnCH,MAAAA,WAAW,GAAGI,QAAQ,CAACJ,WAAD,CAAtB;AACA;;AAEDF,IAAAA,SAAS,CAACD,KAAK,CAACI,MAAN,CAAaX,EAAd,CAAT,GAA6BU,WAA7B;AAEAb,IAAAA,OAAO,CAACW,SAAD,CAAP;AACA,GAZD;;AAcGjB,EAAAA,SAAS,CAAC,MAAM;AAClBG,IAAAA,WAAW,GAAGqB,IAAd,CAAmBX,QAAnB;AACA,GAFW,EAET,EAFS,CAAT;;AAIH,QAAMY,mBAAmB,GAAIT,KAAD,IAAW;AAErCd,IAAAA,SAAS,CAACgB,MAAD,CAAT,CACEM,IADF,CACO,MAAMV,QAAQ,CAAC,UAAD,CADrB;AAEA,GAJF;;AAOI,sBACH;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAII;AAAA,6BACF;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BAEC;AAAQ,UAAA,KAAK,EAAET,IAAI,CAACI,EAApB;AAAwB,UAAA,IAAI,EAAC,MAA7B;AAAoC,UAAA,EAAE,EAAC,IAAvC;AAA4C,UAAA,QAAQ,EAAEM,2BAAtD;AAAmF,UAAA,SAAS,EAAC,cAA7F;AAAA,kCACC;AAAQ,YAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAEEH,KAAK,CAACc,GAAN,CAAUC,CAAC,iBACX;AAAmB,YAAA,KAAK,EAAEA,CAAC,CAAClB,EAA5B;AAAA,sBACEkB,CAAC,CAACnB;AADJ,aAAamB,CAAC,CAAClB,EAAf;AAAA;AAAA;AAAA;AAAA,kBADA,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YAJJ,eAiBC;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AACC,MAAA,OAAO,EAAEgB,mBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADG;AAwBE,CAlEA;;GAAMrB,U;UAcKH,W;;;KAdLG,U","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import { getAllFriends } from '../../modules/FriendManager';\n// import './FriendForm.css'\nimport { addFriend } from '../../modules/FriendManager';\nimport { getAllUsers } from '../../modules/FriendManager';\n\nexport const FriendForm = () => {\n\t\n\n\tconst [user, setUser] = useState({\n\t\temail: \"\",\n\t\tname: \"\",\n\t\tid: 0\n\t});\n\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\t\n\tconst [users, setUsers] = useState([]);\n\n\tconst navigate = useNavigate();\n\n\t\n\tconst handleControlledInputChange = (event) => {\n\t\t\n\t\tconst newFriend = { ...friend }\n\t\tlet selectedVal = event.target.value\n\t\t\n\t\tif (event.target.id.includes(\"Id\")) {\n\t\t\tselectedVal = parseInt(selectedVal)\n\t\t}\n\t\t\n\t\tnewFriend[event.target.id] = selectedVal\n\t\t\n\t\tsetUser(newFriend)\n\t}\n\n    useEffect(() => {\n\t\tgetAllUsers().then(setUsers)\n\t}, []);\n\n\tconst handleClickSaveUser = (event) => {\n\t\t\n\t\t\taddFriend(friend)\n\t\t\t\t.then(() => navigate(\"/friends\"))\n\t\t}\n\t\n\n     return (\n\t\t<form className=\"friendForm\">\n\t\t\t<h2 className=\"friendForm__title\">Add Friends</h2>\n\t\t\t\n\t\t\t\n\t\t    <fieldset>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\n\t\t\t\t\t<select value={user.id} name=\"name\" id=\"id\" onChange={handleControlledInputChange} className=\"form-control\" >\n\t\t\t\t\t\t<option value=\"0\">select a user</option>\n\t\t\t\t\t\t{users.map(c => (\n\t\t\t\t\t\t\t<option key={c.id} value={c.id}>\n\t\t\t\t\t\t\t\t{c.name}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t\t<button className=\"btn btn-primary\"\n\t\t\t\tonClick={handleClickSaveUser}>\n\t\t\t\tAdd Friend\n          </button>\n\t\t</form>\n\t)\n\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\t\n"]},"metadata":{},"sourceType":"module"}