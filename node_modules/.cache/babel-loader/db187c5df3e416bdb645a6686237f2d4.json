{"ast":null,"code":"var _jsxFileName = \"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Events/EventEditForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getEventById, updateEvent } from \"../../modules/EventManager\";\nimport \"./EventForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EventEditForm = () => {\n  _s();\n\n  const [event, setEvent] = useState({\n    title: \"\",\n    subject: \"\",\n    location: \"\",\n    description: \"\",\n    date: \"\",\n    time: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    eventId\n  } = useParams();\n  const navigate = useNavigate();\n\n  const handleFieldChange = evt => {\n    const stateToChange = { ...event\n    };\n    stateToChange[evt.target.id] = evt.target.value;\n    setEvent(stateToChange);\n  };\n\n  const updateExistingEvent = evt => {\n    evt.preventDefault();\n    setIsLoading(true); // This is an edit, we need the id\n\n    const editedEvent = {\n      id: eventId,\n      title: event.title,\n      subject: event.subject,\n      location: event.location,\n      description: event.description,\n      date: event.date,\n      time: event.time\n    };\n    updateEvent(editedEvent).then(() => navigate(\"/events\"));\n  };\n\n  useEffect(() => {\n    getEventById(eventId).then(event => {\n      setEvent(event);\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formgrid\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            className: \"form-control\",\n            onChange: handleFieldChange,\n            id: \"title\",\n            value: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            className: \"form-control\",\n            onChange: handleFieldChange,\n            id: \"subject\",\n            value: event.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            className: \"form-control\",\n            onChange: handleFieldChange,\n            id: \"location\",\n            value: event.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            className: \"form-control\",\n            onChange: handleFieldChange,\n            id: \"date\",\n            value: event.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            className: \"form-control\",\n            onChange: handleFieldChange,\n            id: \"time\",\n            value: event.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            className: \"form-control\",\n            onChange: handleFieldChange,\n            id: \"description\",\n            value: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Decription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alignRight\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            disabled: isLoading,\n            onClick: updateExistingEvent,\n            className: \"btn btn-primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(EventEditForm, \"ituRj9SuMCUkdDpw64AGvjJr2Vk=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = EventEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventEditForm\");","map":{"version":3,"sources":["/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Events/EventEditForm.js"],"names":["React","useState","useEffect","useNavigate","useParams","getEventById","updateEvent","EventEditForm","event","setEvent","title","subject","location","description","date","time","isLoading","setIsLoading","eventId","navigate","handleFieldChange","evt","stateToChange","target","id","value","updateExistingEvent","preventDefault","editedEvent","then"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {getEventById, updateEvent} from \"../../modules/EventManager\"\nimport \"./EventForm.css\"\n\nexport const EventEditForm = () => {\n    const [event, setEvent] = useState({ title: \"\", subject: \"\", location: \"\", description: \"\", date: \"\", time: \"\" });\n    const [isLoading, setIsLoading ] = useState(false);\n\n    const {eventId} = useParams();\n    const navigate = useNavigate();\n\n    const handleFieldChange = evt => {\n        const stateToChange = { ...event };\n        stateToChange[evt.target.id] = evt.target.value;\n        setEvent(stateToChange);\n    };\n\n    const updateExistingEvent = evt => {\n        evt.preventDefault()\n        setIsLoading(true);\n\n        // This is an edit, we need the id\n        const editedEvent = {\n            id: eventId,\n            title: event.title,\n            subject: event.subject,\n            location: event.location,\n            description: event.description,\n            date: event.date,\n            time: event.time\n\n        };\n\n        updateEvent(editedEvent)\n            .then(() => navigate(\"/events\")\n        )\n\n    }\n\n    useEffect(() => {\n        getEventById(eventId)\n          .then(event => {\n            setEvent(event);\n            setIsLoading(false);\n          });\n    }, []);\n\n\n    return (\n        <>\n            <form>\n                <fieldset>\n                    <div className=\"formgrid\">\n                        <input\n                            type=\"text\"\n                            required\n                            className=\"form-control\"\n                            onChange={handleFieldChange}\n                            id=\"title\"\n                            value={event.title}\n                            />\n                            <label htmlFor=\"name\">Title</label>\n                            \n\n                        <input\n                            type=\"text\"\n                            required\n                            className=\"form-control\"\n                            onChange={handleFieldChange}\n                            id=\"subject\"\n                            value={event.subject}\n                            />\n                            <label htmlFor=\"name\">Subject</label>\n\n                        <input\n                            type=\"text\"\n                            required\n                            className=\"form-control\"\n                            onChange={handleFieldChange}\n                            id=\"location\"\n                            value={event.location}\n                            />\n                            <label htmlFor=\"name\">Location</label>\n\n                        <input\n                            type=\"text\"\n                            required\n                            className=\"form-control\"\n                            onChange={handleFieldChange}\n                            id=\"date\"\n                            value={event.date}\n                            />\n                            <label htmlFor=\"name\">Date</label>\n\n                        <input\n                            type=\"text\"\n                            required\n                            className=\"form-control\"\n                            onChange={handleFieldChange}\n                            id=\"time\"\n                            value={event.time}\n                            />\n                            <label htmlFor=\"name\">Time</label>\n\n                        <input\n                            type=\"text\"\n                            required\n                            className=\"form-control\"\n                            onChange={handleFieldChange}\n                            id=\"description\"\n                            value={event.description}\n                            />\n                            <label htmlFor=\"name\">Decription</label>\n                       \n                        </div>\n                    <div className=\"alignRight\">\n                        <button\n                        type=\"button\" disabled={isLoading}\n                        onClick={updateExistingEvent}\n                        className=\"btn btn-primary\"\n                        >Submit</button>\n\n                        </div>\n                </fieldset>\n            </form>\n        </>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}