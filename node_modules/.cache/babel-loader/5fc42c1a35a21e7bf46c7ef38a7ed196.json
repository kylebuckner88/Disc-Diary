{"ast":null,"code":"var _jsxFileName = \"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Tasks/TaskDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { getTaskById, deleteTask } from \"../../modules/TaskManager\";\nimport \"./TaskDetail.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskDetail = () => {\n  _s();\n\n  const [task, setTask] = useState({\n    goal: \"\",\n    location: \"\",\n    description: \"\",\n    timeframe: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    taskId\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    //gettaskById(id) from taskManager and hang on to the data; put it into state\n    console.log(\"useEffect\", taskId);\n    getTaskById(taskId).then(task => {\n      setTask(task);\n      setIsLoading(false);\n    });\n  }, [taskId]);\n\n  const handleDelete = () => {\n    //invoke the delete function in taskManger and re-direct to the task list.\n    setIsLoading(true);\n    deleteTask(taskId).then(() => navigate(\"/tasks\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"task__goal\",\n      children: task.goal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task__location\",\n      children: task.location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task__description\",\n      children: [\"Description: \", task.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task__timeframe\",\n      children: [\"Timeframe: \", task.timeframe]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      disabled: isLoading,\n      onClick: handleDelete,\n      children: \"Remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskDetail, \"7G8HeQeNPLhsh9kzKkdHK8J2xT0=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = TaskDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDetail\");","map":{"version":3,"sources":["/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Tasks/TaskDetail.js"],"names":["React","useState","useEffect","useParams","useNavigate","getTaskById","deleteTask","TaskDetail","task","setTask","goal","location","description","timeframe","isLoading","setIsLoading","taskId","navigate","console","log","then","handleDelete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,SAAR,EAAmBC,WAAnB,QAAqC,kBAArC;AACA,SAASC,WAAT,EAAqBC,UAArB,QAAuC,2BAAvC;AACA,OAAO,kBAAP;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE,EAAtB;AAA0BC,IAAAA,WAAW,EAAC,EAAtC;AAAyCC,IAAAA,SAAS,EAAE;AAApD,GAAD,CAAhC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAM;AAACe,IAAAA;AAAD,MAAWb,SAAS,EAA1B;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,MAAzB;AACAX,IAAAA,WAAW,CAACW,MAAD,CAAX,CACGI,IADH,CACQZ,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAO,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJH;AAKD,GARQ,EAQN,CAACC,MAAD,CARM,CAAT;;AAUA,QAAMK,YAAY,GAAG,MAAM;AACzB;AACAN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAT,IAAAA,UAAU,CAACU,MAAD,CAAV,CAAmBI,IAAnB,CAAwB,MACtBH,QAAQ,CAAC,QAAD,CADV;AAGD,GAND;;AAQA,sBACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAA4BT,IAAI,CAACE;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAAiCF,IAAI,CAACG;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,kCAAiDH,IAAI,CAACI,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gCAA6CJ,IAAI,CAACK,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAEC,SAAhC;AAA2C,MAAA,OAAO,EAAEO,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CArCM;;GAAMd,U;UAIMJ,S,EACAC,W;;;KALNG,U","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {useParams, useNavigate} from \"react-router-dom\"\nimport { getTaskById,deleteTask } from \"../../modules/TaskManager\";\nimport \"./TaskDetail.css\";\n\nexport const TaskDetail = () => {\n  const [task, setTask] = useState({ goal: \"\", location: \"\", description:\"\",timeframe: \"\" });\n  const [isLoading, setIsLoading] = useState(true);\n\n  const {taskId} = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    //gettaskById(id) from taskManager and hang on to the data; put it into state\n    console.log(\"useEffect\", taskId)\n    getTaskById(taskId)\n      .then(task => {\n        setTask(task);\n        setIsLoading(false);\n      });\n  }, [taskId]);\n\n  const handleDelete = () => {\n    //invoke the delete function in taskManger and re-direct to the task list.\n    setIsLoading(true);\n    deleteTask(taskId).then(() =>\n      navigate(\"/tasks\")\n    );\n  };\n\n  return (\n    <section className=\"task\">\n      <h3 className=\"task__goal\">{task.goal}</h3>\n      <div className=\"task__location\">{task.location}</div>\n      {/* What's up with the question mark???? See below.*/}\n      <div className=\"task__description\">Description: {task.description}</div>\n      <div className=\"task__timeframe\">Timeframe: {task.timeframe}</div>\n      <button type=\"button\" disabled={isLoading} onClick={handleDelete}>\n          Remove\n        </button>\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}