{"ast":null,"code":"var _jsxFileName = \"/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Events/EventList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { EventCard } from './EventCard.js';\nimport { getAllEvents, getEventById, deleteEvent } from '../../modules/EventManager.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EventList = () => {\n  _s();\n\n  //The initial state is an empty array\n  const [events, setEvents] = useState([]);\n  let navigate = useNavigate();\n\n  const getEventById = () => {\n    //After the date comes back from the API,\n    // we use the setEvents funstion to update state\n    return getAllEvents().then(eventsFromAPI => {\n      setEvents(eventsFromAPI);\n    });\n  }; //got the customers from the API on the components's first render\n\n\n  useEffect(() => {\n    getEventById();\n  }, []); //this is the delete customer function\n\n  const handleDeleteEvent = id => {\n    deleteEvent(id).then(() => getAllEvents().then(setEvents));\n  }; //Now we use .map() to \"loop over\" the events array to show a list of event cards\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section-content\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: () => {\n          navigate(\"/events/create\");\n        },\n        children: \"Add New Evevnt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-cards\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(EventCard, {\n        eventObject: event,\n        handleDeleteEvent: handleDeleteEvent\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EventList, \"agCrRaRkxpwnLGNy5tzIH8WzeY8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/Users/kylebuckner/workspace/nutshell-java-dalia/src/components/Events/EventList.js"],"names":["React","useState","useEffect","EventCard","getAllEvents","getEventById","deleteEvent","useNavigate","EventList","events","setEvents","navigate","then","eventsFromAPI","handleDeleteEvent","id","map","event"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,WAArC,QAAwD,+BAAxD;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,MAAIU,QAAQ,GAAGJ,WAAW,EAA1B;;AAEA,QAAMF,YAAY,GAAG,MAAM;AACvB;AACA;AACA,WAAOD,YAAY,GAAGQ,IAAf,CAAoBC,aAAa,IAAI;AACxCH,MAAAA,SAAS,CAACG,aAAD,CAAT;AACH,KAFM,CAAP;AAGH,GAND,CAL2B,CAa3B;;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT,CAd2B,CAkB3B;;AACA,QAAMS,iBAAiB,GAAGC,EAAE,IAAI;AAC5BT,IAAAA,WAAW,CAACS,EAAD,CAAX,CACCH,IADD,CACM,MAAMR,YAAY,GAAGQ,IAAf,CAAoBF,SAApB,CADZ;AAEH,GAHD,CAnB2B,CAwB3B;;;AACA,sBACI;AAAA,4BACI;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA,6BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AACI,QAAA,SAAS,EAAC,KADd;AAEI,QAAA,OAAO,EAAE,MAAM;AAACC,UAAAA,QAAQ,CAAC,gBAAD,CAAR;AAA2B,SAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACKF,MAAM,CAACO,GAAP,CAAWC,KAAK,iBACb,QAAC,SAAD;AAEA,QAAA,WAAW,EAAEA,KAFb;AAGA,QAAA,iBAAiB,EAAEH;AAHnB,SACKG,KAAK,CAACF,EADX;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAkBH,CA3CM;;GAAMP,S;UAGMD,W;;;KAHNC,S","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { EventCard } from './EventCard.js';\nimport { getAllEvents, getEventById, deleteEvent } from '../../modules/EventManager.js';\nimport { useNavigate } from 'react-router-dom'\n\nexport const EventList = () => {\n    //The initial state is an empty array\n    const [events, setEvents] = useState([]);\n    let navigate = useNavigate();\n\n    const getEventById = () => {\n        //After the date comes back from the API,\n        // we use the setEvents funstion to update state\n        return getAllEvents().then(eventsFromAPI => {\n            setEvents(eventsFromAPI)\n        });\n    }\n\n    //got the customers from the API on the components's first render\n    useEffect(() => {\n        getEventById();\n    }, []);\n\n    //this is the delete customer function\n    const handleDeleteEvent = id => {\n        deleteEvent(id)\n        .then(() => getAllEvents().then(setEvents));\n    };\n\n    //Now we use .map() to \"loop over\" the events array to show a list of event cards\n    return (\n        <>\n            <section className=\"section-content\">\n                <button type=\"button\"\n                    className=\"btn\"\n                    onClick={() => {navigate(\"/events/create\")}}>\n                    Add New Evevnt\n                    </button>\n            </section>\n            <div className=\"container-cards\">\n                {events.map(event =>\n                    <EventCard \n                    key={event.id}\n                    eventObject={event}\n                    handleDeleteEvent={handleDeleteEvent} />)}\n            </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}